---
layout: simplepage
title: Pipeline 示例
section: doc
---

:ruby
  require 'coderay'

  examples_dir = File.expand_path(File.dirname(__FILE__) + '/../../_tmp/examples/pipeline-examples')
  pipeline_examples = File.join(examples_dir, 'pipeline-examples')

  examples = []
  Dir.entries(pipeline_examples).sort.each do |dir|
    next if dir.start_with?('.')

    full_path = File.join(pipeline_examples, dir)
    readme = File.join(full_path, 'README.md')

    # We must have a readme for each directory otherwise we won't use it
    next unless File.directory?(full_path)
    next unless File.exists?(readme)

    readme = File.open(readme).read
    # Titlecase based off the directory name
    title = dir.gsub('-', ' ').split(' ').map { |w| w.capitalize }.join(' ')

    # Collect whatever groovy files, which represent the examples, into the array
    codes = Dir.glob("#{full_path}/*.groovy")

    examples << [dir, title, readme, codes]
  end



%div
  %p
    下面的示例来自 GitHub 上的仓库
    %a{:href => 'https://github.com/jenkinsci/pipeline-examples', :target => '_blank'}
      pipeline-examples
    ，并由 Jenkins 项目的多个成员贡献。如果您有兴趣贡献您自己的示例，请参考这个仓库中的
    %a{:href => 'https://github.com/jenkinsci/pipeline-examples#introduction', :target => '_blank'}
      README
    。

%div.toc#toc
  %div.toctitle
    内容目录
  %ul.sectlevel1
    - examples.each do |dir, title, y, z|
      %li
        %a{:href => ['#', dir].join('')}
          = title


%div.examples
  - examples.each do |dir, title, readme, codes|
    %div.example
      :ruby
        # Replacing markdown headers with ones one level further indented
        readme.gsub!(/^#/, '#####')

      %div.title
        %a{:name => dir}
        %h3
          = title

      %div.readme
        :plain
          <!--
          #{readme}
          -->
        :markdown
          #{readme}

      %div.code
        - codes.each do |code|
          :plain
            <!-- syntax highlighting #{File.basename(code)} -->
          %div.listingblock
            = CodeRay.scan(File.open(code).read, :groovy).div

